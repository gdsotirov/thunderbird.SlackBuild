#!/bin/sh
#
# Slackware build script for Mozilla Thunderbird
# Copyright (C) 2008-2020 Georgi D. Sotirov <gdsotirov@gmail.com>
# Based on the original build script by Patrick Volkerding <volkerdi@slackware.com>
#
# This is not a source build script.  Rather, it builds a Slackware
# package from the official binary tarball available from mozilla.org.
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#
# Visit SlackPack at https://sotirov-bg.net/slackpack/
#

. ../../slack-package.conf

NAME=thunderbird
VERSION=17.0.4
ARCH=${ARCH:-i686}
LOCALE=bg
BUILD=${BUILD:-1}
KDE_PATH=/usr

if [ "$ARCH" = "i486" -o "$ARCH" = "i586" -o "$ARCH" = "i686" ]; then
  ARCH="i686"
fi

CWD=`pwd`
TMP=${TMP:-/tmp}
PKG=$TMP/package-$NAME

if [ ! -e $TMP ]; then
  mkdir -p $TMP # location to build the source
fi

SRC=$TMP/$NAME-$VERSION
if [ -e $SRC -a -d $SRC ]; then
   echo "Source directory '$SRC' already exists! Plaese, move it or remove it."
   exit 1
fi

PKG=$TMP/package-$NAME
if [ -e $PKG -a -d $PKG ]; then
  echo "Package creation directory '$PKG' already exists! Please, move it or remove it."
  exit 2
fi
PKG_LIBDIR=$PKG/usr/lib${LIBDIRSUFFIX}
mkdir -p $PKG_LIBDIR

cd $PKG_LIBDIR
tar -jxvf $CWD/$NAME-$VERSION.tar.bz2
mv $NAME $NAME-$VERSION
ln -sf $NAME-$VERSION $NAME
cd $NAME-$VERSION

# Patching the distribution
cat $CWD/$NAME-firefox.txt >> defaults/pref/mailnews.js 

mkdir -p $PKG/usr/bin
( cd $PKG/usr/bin
  ln -sf /usr/lib${LIBDIRSUFFIX}/$NAME-$VERSION/$NAME .
)

# Creating environment integration items
install -m 755 -d $PKG_LIBDIR/mozilla/plugins

install -m 755 -d $PKG/usr/share/applications
install -m 644 $CWD/$NAME.desktop $PKG/usr/share/applications/$NAME.desktop

install -m 755 -d $PKG/usr/share/icons/hicolor/48x48
install -m 644 $PKG_LIBDIR/$NAME-$VERSION/chrome/icons/default/default48.png \
               $PKG/$KDE_PATH/share/icons/hicolor/48x48/$NAME.png
install -m 755 -d $PKG/usr/share/icons/hicolor/32x32
install -m 644 $PKG_LIBDIR/$NAME-$VERSION/chrome/icons/default/default32.png \
               $PKG/$KDE_PATH/share/icons/hicolor/32x32/$NAME.png
install -m 755 -d $PKG/usr/share/icons/hicolor/16x16
install -m 644 $PKG_LIBDIR/$NAME-$VERSION/chrome/icons/default/default16.png \
               $PKG/$KDE_PATH/share/icons/hicolor/16x16/$NAME.png

install -m 755 -d $PKG/usr/share/pixmaps
install -m 644 $PKG_LIBDIR/$NAME-$VERSION/chrome/icons/default/default32.png \
               $PKG/usr/share/pixmaps/$NAME.png

bin_perms $PKG

# Creating documentation
install -m 755 -d $PKG/usr/doc/$NAME-$VERSION$LOCALE
install -m 644 $CWD/README.in $PKG/usr/doc/$NAME-$VERSION$LOCALE/README
install -m 644 $CWD/MPLLIC    $PKG/usr/doc/$NAME-$VERSION$LOCALE/COPYING

# Preparing package
install -m 755 -d $PKG/install
install -m 644 $CWD/slack-desc     $PKG/install/slack-desc
install -m 644 $CWD/slack-required $PKG/install/slack-required
install -m 644 $CWD/slack-suggests $PKG/install/slack-suggests

# Build information
SBDIR=$PKG/usr/src/slackbuilds/$NAME-$VERSION$LOCALE
install -m 755 -d $SBDIR
install -m 644 $CWD/slack-desc          $SBDIR/slack-desc
install -m 644 $CWD/slack-required      $SBDIR/slack-required
install -m 644 $CWD/slack-suggests      $SBDIR/slack-suggests
install -m 644 $CWD/$NAME.desktop       $SBDIR/$NAME.desktop
install -m 644 $CWD/$NAME-firefox.txt   $SBDIR/$NAME-firefox.txt
install -m 644 $CWD/$NAME.SlackBuild    $SBDIR/$NAME.SlackBuild

# Building package
PKG_DIR=${PKG_DIR:-$TMP}
cd $PKG
PKGNAME=$NAME-$VERSION$LOCALE-$ARCH-$BUILD$MYIN
makepkg -l y -c n $PKG_DIR/$PKGNAME.txz
cat $CWD/slack-desc > $PKG_DIR/$PKGNAME.txt
md5sum $PKG_DIR/$PKGNAME.txz > $PKG_DIR/$PKGNAME.txz.md5

# Clean up (optionally)
if [ "$1" == "--cleanup" ]; then
  rm -r $PKG
fi

